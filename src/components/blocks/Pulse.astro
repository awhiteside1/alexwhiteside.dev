---
interface Props {
	mainCircleSize?: number
	mainCircleOpacity?: number
	numCircles?: number
	color?: string
}

const {
	mainCircleSize = 50,
	mainCircleOpacity = 0.24,
	numCircles = 5,
} = Astro.props

const circles = Array.from({ length: numCircles }, (_, i) => {
	const size = mainCircleSize + i * 70
	const opacity = mainCircleOpacity - i * 0.03
	const animationDelay = `${i * 0.06}s`
	const borderStyle = i === numCircles - 1 ? 'dashed' : 'solid'
	const borderOpacity = 5 + i * 5

	return { size, opacity, animationDelay, borderStyle, borderOpacity }
})
---

<div
    class={` absolute inset-0 flex items-center justify-center bg-white/50 [mask-image:linear-gradient(to_bottom,white,transparent)]`}>
    {
        circles.map((circle, i) => (
            <div
                class={` group-hover/bento:animate-ripple absolute  rounded-full bg-foreground/25 shadow-xl border `}
                style={{
                    width: `${circle.size}px`,
                    height: `${circle.size}px`,
                    opacity: circle.opacity,
                    animationDelay: circle.animationDelay,
                    borderStyle: circle.borderStyle,
                    borderWidth: '1px',
                    borderColor: `hsl(var(--color-foreground), ${circle.borderOpacity / 100})`,
                    top: '50%',
                    left: '50%',
                    transform: 'translate(-50%, -50%) scale(1)',
                }}
            />
        ))
    }
</div>
