---

---

<button
    title={`Switch theme`}
    id="theme-picker"
    aria-label={`Switch theme`}
    class="group flex justify-start rounded-lg hover:bg-black/5 focus-visible:bg-black/5 dark:border-white/20 dark:hover:bg-white/5 dark:focus-visible:bg-white/5 h-10 -mx-2 text-sm font-semibold leading-6 text-nowrap min-w-[160px] gap-3 px-2 items-center"
>
    <svg
        fill="none"
        viewBox="0 0 24 24"
        stroke-width="1.5"
        class="h-6 w-6 shrink-0"
        class="transition-colors duration-300 ease-in-out group-hover:animate-pulse group-hover:fill-black group-focus-visible:animate-pulse group-focus-visible:fill-black group-hover:dark:fill-white dark:group-focus-visible:fill-white h-full w-full"
    >
        <use xlink:href="#moon"></use>
    </svg>
    <p class="capitalize" id="theme-label"></p>
</button>
<script is:inline>
    function forceThemeChange(theme) {
        if (
            Array.from(document.documentElement.classList.values()).filter(
                (e) => ['dark', 'light', 'system'].includes(e)
            ).length > 1
        ) {
        } else if (document.documentElement.classList.contains(theme)) {
            return
        }
        const css = document.createElement('style')

        css.appendChild(
            document.createTextNode(
                `* {
             -webkit-transition: none !important;
             -moz-transition: none !important;
             -o-transition: none !important;
             -ms-transition: none !important;
             transition: none !important;
          }
        `
            )
        )

        document.head.appendChild(css)
        document.documentElement.classList.remove('dark')
        document.documentElement.classList.remove('light')
        document.documentElement.classList.remove('system')
        document.documentElement.classList.add(theme)

        window.getComputedStyle(css).opacity
        document.head.removeChild(css)
    }

    const getSystemModeValue = () => {
        return window.matchMedia('(prefers-color-scheme: dark)').matches
            ? 'dark'
            : 'light'
    }

    document.addEventListener('astro:before-swap', (ev) => {
        const systemMode = getSystemModeValue()
        const userSetMode = localStorage.getItem('theme') // defaults to undefined, thus systemMode is used
        let darkMode = systemMode === 'dark'
        if (userSetMode) {
            // If user sets a theme honor it ignoring system
            darkMode = userSetMode === 'dark' // userSetMode is either 'dark' or 'light'
        }
        if (darkMode) {
            ev.newDocument.documentElement.classList.add('dark')
        }
    })

    const themeOrder = { system: 'dark', dark: 'light', light: 'system' }
    const setupThemePicker = () => {
        if (document.getElementById('theme-picker')?.dataset.setup === 'true') {
            return undefined
        }
        document.getElementById('theme-picker').dataset.setup = true

        document
            .getElementById('theme-picker')
            .addEventListener('click', () => {
                const currentSetting = localStorage.theme ?? 'system'
                let nextSetting = themeOrder[currentSetting]
                document.getElementById('theme-label').innerText =
                    nextSetting + ' Theme'

                if (nextSetting === 'system') {
                    localStorage.removeItem('theme')
                    nextSetting = getSystemModeValue()
                } else {
                    localStorage.setItem('theme', nextSetting)
                }
                forceThemeChange(nextSetting)
            })
        document.getElementById('theme-picker').dataset.setup = true
    }

    document.addEventListener('astro:after-swap', () => setupThemePicker())
    document.addEventListener('astro:page-load', () => setupThemePicker())

    if (window?.hacks?.theme === undefined) {
        Object.assign(window, { hacks: { theme: true } })
        if (localStorage.theme === 'dark') {
            document.documentElement.classList.add('dark')
        } else if (
            getSystemModeValue() === 'dark' &&
            localStorage.theme !== 'light'
        ) {
            document.documentElement.classList.add('dark')
        }
        setTimeout(() => {
            const nextSetting = localStorage.theme ?? 'System'
            document.getElementById('theme-label').innerText =
                nextSetting + ' Theme'
        }, 500)
    }

    document.addEventListener('astro:after-swap', (ev) => {
        const nextSetting = localStorage.theme ?? 'System'
        document.getElementById('theme-label').innerText =
            nextSetting + ' Theme'
    })
</script>
