---
import { cn } from '@lib/utils'
import { isString } from 'radash'
type Props = {
	color?: keyof typeof colors
	text: string
}

const colors = {
	gray: 'bg-gray-50 text-gray-600 ring-gray-500/10',
	red: 'bg-red-50 text-red-700 ring-red-600/10',
	yellow: 'bg-yellow-50 text-yellow-800 ring-yellow-600/20',
	green: 'bg-green-50 text-green-700 ring-green-600/20',
	blue: 'bg-blue-50 text-blue-700 ring-blue-700/10',
	indigo: 'bg-indigo-50 text-indigo-700 ring-indigo-700/10',
	purple: 'bg-purple-50 text-purple-700 ring-purple-700/10',
	pink: 'bg-pink-50 text-pink-700 ring-pink-700/10',
}

// Simple hash function
function hashString(str: string) {
	let hash = 0
	for (let i = 0; i < str.length; i++) {
		hash = str.charCodeAt(i) + ((hash << 5) - hash)
	}
	return hash
}

// Get color based on hash
function getColorFromHash(text: string) {
	if (!isString(text)) return colors.gray
	const hash = hashString(text)
	const colorKeys = Object.keys(colors)
	const colorIndex = Math.abs(hash) % colorKeys.length
	const index = colorKeys[colorIndex] as keyof typeof colors
	return colors[index]
}

const { text, color } = Astro.props

const colorHash = getColorFromHash(text)

const colorClasses = color ? colors[color] : colorHash
---

{text && <span class={cn(["inline-flex items-center rounded-full px-2 py-1 text-xs font-medium ring-1 ring-inset dark:invert", colorClasses])}>{Astro.props.text}</span>}
