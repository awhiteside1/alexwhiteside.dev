---
import { cn } from '@ui/utils/cn'
import { uid } from 'radash'

const gradients = {
    blue: 'from-indigo-500 via-sky-500 to-emerald-500',
    orange: 'from-orange-500  to-red-500',
    pink: 'from-pink-500 to-red-400',
    neutral: 'from-gray-500 to-gray-700 dark:from-gray-100 dark:to-gray-400',
    teal: 'from-emerald-400 to-cyan-400',
    slate: 'from-slate-500 to-slate-800 dark:from-slate-200 dark:to-slate-400'
}

type Props = {
    animate?: boolean
    class?: string
    color: keyof typeof gradients
}

const {  color = 'blue' , animate = false} = Astro.props

const gradientClass = gradients[color]

const id = uid(7)
---

<script>
const setGradient = (id:string,enable: boolean) => {
    const element = document.getElementById(id)
    if (enable) {
        element?.classList.add('animate-gradient')
    } else {
        element?.classList.remove('animate-gradient')
    }
}

// Create an Intersection Observer
const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
        setGradient(entry.target.id,entry.isIntersecting)
    })
}, {
    threshold: 0.1 // Trigger when at least 10% of the element is visible
})

const initializeGradients =()=>{
    const elements = document.getElementsByClassName('perf-gradient-text')
    for (const element of elements) {
        if(element instanceof HTMLElement && !element.dataset.gradient) {
            element.dataset.gradient = 'true'
            observer.observe(element)
        }
    }
}

// Start observing the elements when they're available in the DOM
// document.addEventListener('DOMContentLoaded', () =>initializeGradients())
document.addEventListener('astro:page-load', () => initializeGradients())
</script>


<div
id={id}
    class={cn(animate &&'perf-gradient-text',  `font-bold bg-gradient-to-r text-transparent bg-clip-text bg-300% leading-none py-2`,
        gradientClass, Astro.props.class
    )}
>
    <slot />
</div>