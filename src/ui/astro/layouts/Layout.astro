---
import SpeedInsights from '@vercel/speed-insights/astro'
import Footer from '../sections/Footer.astro'
import Head from '../sections/Head.astro'
import Burger from '../sections/navigation/Burger.astro'
import Header from '../sections/navigation/Header.astro'
import DotBackground from './DotBackground.astro'

type Props = {
    title: string
    description: string
}

const { title, description } = Astro.props
---

<!doctype html>
<html lang="en" class="system light">
    <head>
        <Head title={`Alex Whiteside | ${title}`} description={description} />
    </head>
    <body>
        <DotBackground />
        <Header
            ><slot slot="before" name="before" />
            <slot slot="title" name="title" /><Burger
                slot="navigation"
            /></Header
        >

        <main>
            <slot />
        </main>
        <Footer />
        <SpeedInsights />
        <!--<PageFind />-->

        <script is:inline>
            function initScrollTimeline() {
                // Some elements we'll need

                const scrollTimeline = new ScrollTimeline({
                    source: document.documentElement,
                    axis: 'block',
                    scrollOffsets: [
                        {
                            target: document.documentElement,
                            edge: 'start',
                        },
                        {
                            target: document.documentElement,
                            edge: 'start',
                        },
                    ],
                })

                const elements = document.getElementsByClassName('scroll-scale')
                for (let i = 0; i < elements.length; i++) {
                    const $header = elements.item(i)

                    $header.animate(
                        [
                            { fontSize: 'max(calc(3vw + 1em), 2.8rem)' },
                            { fontSize: 'max(calc(3vw + 1em), 2.8rem)' },
                            { fontSize: 'var(--max-font-size)' },
                        ],

                        {
                            fill: 'both',
                            timeline: scrollTimeline,
                            rangeStart: '0px',
                            rangeEnd: '200px',
                        }
                    )
                    $header.classList.remove('load')
                }

                const bgElements = document.getElementsByClassName('scroll-bg')
                for (let i = 0; i < bgElements.length; i++) {
                    const $bg = bgElements.item(i)
                    $bg.animate(
                        [
                            {
                                background: 'transparent',
                                borderBottomColor: 'transparent',
                            },
                            {
                                background: 'rgba(var(--menu-bg), 0.2)',
                                borderBottomColor: 'transparent',
                                offset: 0.4,
                            },
                            {
                                background: 'rgba(var(--menu-bg), 0.75)',
                                borderBottomColor: 'rgba(var(--border), 0.2)',
                                offset: 0.5,
                            },
                            {
                                background: 'rgba(var(--menu-bg), 0.9)',
                                borderBottomColor: 'rgb(var(--border), 1)',
                            },
                        ],
                        {
                            duration: 1,
                            fill: 'both',
                            rangeStart: '0px',
                            rangeEnd: '200px',
                            timeline: scrollTimeline,
                        }
                    )
                    $bg.classList.remove('load')
                }

                document.addEventListener('astro:after-swap', () =>
                    initScrollTimeline()
                )
            }

            window.initScrollTimeline = initScrollTimeline
        </script>

        <script is:inline>

            function appendPolyfill(){
                const script = document.createElement('script')
                script.onload = ()=> window.initScrollTimeline()
                script.src = '/js/scroll-timeline.js'
                script.async = true
                document.body.appendChild(script)
            }
            if (window.ScrollTimeline === undefined) {
                console.log('loading polyfill')
                appendPolyfill()
            } else {
                window.initScrollTimeline()
            }
        </script>

        <!-- <script async
            onload="initScrollTimeline()"
            src="/js/scroll-timeline.js"
        ></script> -->
    </body>
</html>
