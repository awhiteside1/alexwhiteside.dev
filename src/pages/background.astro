---
import WorkCard from '@ui/astro/components/elements/WorkCard.astro'
import Container from '../ui/astro/components/Container.astro'
import Layout from '../ui/astro/layouts/Layout.astro'
import GradientText from '../ui/react/Gradient/GradientText.astro'
import { getCollection } from 'astro:content'
import { group, mapValues, min, max, first, sift } from 'radash'
import MediaElement from '@ui/astro/components/elements/MediaElement.astro'
import { generateInterval, byDate } from '@ui/utils/interval'
const allWork = await getCollection('work')
const grouped = group(allWork, (w) => w.data.company)
const byCompany = mapValues(
    grouped,
    (group) =>
        group && {
            roles: group?.toSorted(byDate((role) => role.data.from)),
            company: first(sift(group.map((x) => x.data.company))),
            logo: first(sift(group.map((x) => x.data.logo))),
            from: group
                .map((x) => x.data.from)
                .toSorted()
                .toReversed()
                .shift(),
            to: group
                .map((x) => x.data.to)
                .toSorted()
                .shift(),
        }
)
const sortedByCompany = Object.values(byCompany).toSorted(
    byDate((x) => x?.from)
)

const groupedWork = group(allWork, (work) => work.data.company)
const work = allWork
    .toSorted((entry) => entry.data.from.getUTCMilliseconds())
    .reverse()
---

<Layout
    title="Background & Experience"
    description="Multiple startup exists in Fintech, Edtech, and more."
>
    <Container>
        <div class="space-y-6">
            <GradientText color="orange" size={6}>Background</GradientText>

            <p class="mt-6 text-base text-zinc-600 dark:text-zinc-400">
                Over the last decade I've spent most of my time in Fintech and
                Edtech as a (very) hands on technical leader.
            </p>

            <div>
                <div class="flex max-w-4xl flex-col gap-6">
                    {
                        sortedByCompany.map(
                            (company) =>
                                company &&
                                company.logo &&
                                company.company &&
                                company.from && (
                                    <article class="md:grid md:grid-cols-4 gap-y-4 gap-x-4 md:items-baseline">
                                        <MediaElement
                                            logo={company.logo}
                                            title={company.company}
                                            subtitle={generateInterval(
                                                company.from,
                                                company.to
                                            )}
                                        />
                                        {company?.roles.map((entry) => (
                                            <WorkCard slug={entry.slug} />
                                        ))}
                                    </article>
                                )
                        )
                    }
                </div>
            </div>
        </div>
    </Container>
</Layout>
